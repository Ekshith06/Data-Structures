"""" Writing programming interview questions hasn't made me rich yet .  So I might give up and start trading Apple stocks all day instead.

First, I wanna know how much money I could have made yesterday if I'd been trading Apple stocks all day.

So I grabbed Apple's stock prices from yesterday and put them in a list called stock_prices, where:

The indices are the time (in minutes) past trade opening time, which was 9:30am local time.

The values are the price (in US dollars) of one share of Apple stock at that time.

So if the stock cost $500 at 10:30am, that means stock_prices[60] = 500.

Write an efficient script that the best profit I could have made from one purchase and one sale of one share of Apple stock yesterday.

For example:

  stock_prices = [10, 7, 5, 8, 11, 9]

the script should returns 6 (buying for $5 and selling for $11)

No "shorting"—you need to buy before you can sell. Also, you can't buy and sell in the same time step—at least 1 minute has to pass.

Note:  For the purpose of auto-grading the input should be 
6 

10

7

5

8

11

9

where the first line indicates the number of elements followed by the elements.
""""
val = int(input())
inp_list=[]
for i in range(val):
    inp_list.append(int(input()))
min_val=inp_list[0]
sol = 0
for val in inp_list:
    min_val = min(min_val,val)
    sol = max(sol,val-min_val)
print(sol)
"""
output:
3
4
5
6
6 5 4"""






